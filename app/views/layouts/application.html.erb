<!DOCTYPE html> 

<html> 

  <head> 

    <title><%= full_title(yield(:title)) %></title>

    <%= stylesheet_link_tag    "application", :media => "all" %> 

    <%= javascript_include_tag "application" %> 

    <%= csrf_meta_tags %> 

    <%= render 'layouts/shim' %>

  </head>


  <body>

    <%= render 'layouts/header' %>
      
      <div class="container" >
        
          <% flash.each do |key, value| %>
	        <%= content_tag(:div, value, class: "alert alert-#{key}") %>
          <% end %>
          <%= yield %>
          <nav id="page-nav">
        
              <a href="/?page=2">Next</a>
        
          </nav>
        
        
        <%= debug(params) if Rails.env.development? %>
     </div>
     
 
    <%= render 'layouts/footer' %>
  </body> 

</html> 

<script type="text/javascript">
$(function(){

  var $container = $('#masonry-container');

  $container.imagesLoaded(function(){
    $container.masonry({
      itemSelector: '.box',
      columnWidth: 200,
      gutterWidth: 5,
      isAnimated: !Modernizr.csstransitions,
      isRTL: true
    });
  });

  $container.infinitescroll({
    navSelector  : '#page-nav',    // selector for the paged navigation 
    nextSelector : '#page-nav a',  // selector for the NEXT link (to page 2)
    itemSelector : '.box',     // selector for all items you'll retrieve
    loading: {
        finishedMsg: 'No more pages to load.',
        img: '/assets/masonry/loader.gif'
      }
    },
    // trigger Masonry as a callback
    function( newElements ) {
      // hide new items while they are loading
      var $newElems = $( newElements ).css({ opacity: 0 });
      // ensure that images load before adding to masonry layout
      $newElems.imagesLoaded(function(){
        // show elems now they're ready
        $newElems.animate({ opacity: 1 });
        $container.masonry( 'appended', $newElems, true ); 
      });
    }
  );
});
</script>

<script type="text/javascript">
$(document).ready(function() {2
   if ($('textarea').length > 0) {
     var data = $('textarea');
     $.each(data, function(i) {
       CKEDITOR.replace(data[i].id);
     });
   } 
});
</script>
